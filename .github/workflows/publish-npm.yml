name: Publish NPM Packages

on:
  push:
    tags:
      - "v*"

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          registry-url: "https://registry.npmjs.org/"
          cache: "pnpm"
          cache-dependency-path: pnpm-lock.yaml

      - name: Create dynamic .npmrc for publishing
        run: |
          echo "Creating .npmrc for publishing... "
          echo "@tatou:registry=https://registry.npmjs.org/" > .npmrc
          echo "//registry.npmjs.org/:_authToken=$NODE_AUTH_TOKEN" >> .npmrc
          echo "access=public" >> .npmrc
          echo "publish-config.access=public" >> .npmrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Debug NPM authentication setup
        run: |
          echo "Checking environment variables..."
          echo "NODE_AUTH_TOKEN is set: $([[ -n "$NODE_AUTH_TOKEN" ]] && echo "YES" || echo "NO")"
          echo "NPM_TOKEN is set: $([[ -n "$NPM_TOKEN" ]] && echo "YES" || echo "NO")"
          echo "Current .npmrc content:"
          cat .npmrc
          echo "npm config list (excluding sensitive data):"
          npm config list --json | jq 'del(.["//registry.npmjs.org/:_authToken"])'
          echo "npm whoami test (should succeed if authenticated):"
          npm whoami || echo "Authentication failed - this will cause publish to fail"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --frozen-lockfile

      - name: Build packages
        run: pnpm build:packages

      - name: Extract version from tag
        id: extract_version
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "tag=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "Publishing for tag: $TAG_NAME"

      - name: Publish packages to NPM
        run: |
          echo "Publishing packages to NPM..."
          # Publish core package
          cd packages/core
          npm publish --access public
          cd ../..
          
          # Publish UI package  
          cd packages/ui
          npm publish --access public
          cd ../..
          
          # Publish storage service package
          cd packages/storage-service
          npm publish --access public
          cd ../..
          
          # Publish OSS app (if it has a package.json with publishConfig)
          if [ -f "apps/oss/package.json" ] && grep -q '"publishConfig"' apps/oss/package.json; then
            cd apps/oss
            npm publish --access public
            cd ../..
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
