-- Production-ready data migration for non-mocked mode
-- This migration adds more realistic test data for production deployments

-- Create additional indexes for better performance
CREATE INDEX IF NOT EXISTS idx_test_runs_status ON test_runs(status);
CREATE INDEX IF NOT EXISTS idx_test_runs_created_at ON test_runs(created_at);
CREATE INDEX IF NOT EXISTS idx_test_definitions_created_at ON test_definitions(created_at);
CREATE INDEX IF NOT EXISTS idx_test_definitions_labels ON test_definitions USING GIN (labels);
CREATE INDEX IF NOT EXISTS idx_test_suites_labels ON test_suites USING GIN (labels);

-- Insert additional production-ready test executors
INSERT INTO test_executors (id, name, description, image, default_command, supported_file_types, environment_variables, icon)
VALUES 
    ('b7e6c1e2-1a2b-4c3d-8e9f-000000000009', 'Vitest Runner', 'Fast unit test runner for Vite projects with native TypeScript support.', 'node:18-alpine', 'npm run test:vitest', ARRAY['js', 'ts', 'json'], ARRAY['VITEST_CONFIG', 'COVERAGE_REPORTER'], '⚡'),
    ('b7e6c1e2-1a2b-4c3d-8e9f-00000000000a', 'Selenium WebDriver', 'Cross-browser testing with Selenium WebDriver for automated UI tests.', 'selenium/standalone-chrome:latest', 'python -m pytest selenium_tests/', ARRAY['py', 'java', 'js'], ARRAY['SELENIUM_HUB_URL', 'BROWSER_NAME'], '🌐'),
    ('b7e6c1e2-1a2b-4c3d-8e9f-00000000000b', 'TestCafe Runner', 'Node.js tool for automated end-to-end testing with no WebDriver required.', 'testcafe/testcafe:latest', 'testcafe chrome tests/', ARRAY['js', 'ts'], ARRAY['TESTCAFE_BROWSER', 'TESTCAFE_REPORTER'], '🧪'),
    ('b7e6c1e2-1a2b-4c3d-8e9f-00000000000c', 'Newman CLI', 'Command-line companion for Postman with advanced collection running capabilities.', 'postman/newman:alpine', 'newman run collection.json --environment env.json', ARRAY['json'], ARRAY['NEWMAN_REPORTER', 'NEWMAN_BAIL'], '📬'),
    ('b7e6c1e2-1a2b-4c3d-8e9f-00000000000d', 'Artillery Load Testing', 'Modern load testing toolkit for production-ready applications.', 'artilleryio/artillery:latest', 'artillery run test.yml', ARRAY['yml', 'yaml', 'json'], ARRAY['ARTILLERY_PLUGINS', 'ARTILLERY_CONFIG'], '🎯'),
    ('b7e6c1e2-1a2b-4c3d-8e9f-00000000000e', 'CodeceptJS E2E', 'Modern end-to-end testing framework with multiple backend support.', 'codeceptjs/codeceptjs:latest', 'npx codeceptjs run', ARRAY['js', 'ts'], ARRAY['CODECEPT_CONFIG', 'CODECEPT_PROFILE'], '🎪'),
    ('b7e6c1e2-1a2b-4c3d-8e9f-00000000000f', 'Robot Framework', 'Generic automation framework for acceptance testing and RPA.', 'robotframework/rfdocker:latest', 'robot tests/', ARRAY['robot', 'py'], ARRAY['ROBOT_OPTIONS', 'ROBOT_REPORTS'], '🤖'),
    ('b7e6c1e2-1a2b-4c3d-8e9f-000000000010', 'Lighthouse Auditor', 'Automated tool for improving web page quality with performance audits.', 'lighthouse:latest', 'lighthouse --output json --output html', ARRAY['json'], ARRAY['LIGHTHOUSE_CONFIG', 'LIGHTHOUSE_THROTTLING'], '💡')
ON CONFLICT (id) DO NOTHING;

-- Insert additional production test definitions (with UUIDs)
INSERT INTO test_definitions (id, name, description, image, commands, created_at, executor_id)
VALUES 
    ('b7e6c1e2-1a2b-4c3d-8e9f-10000000000c', 'Lighthouse Performance Audit', 'Automated performance, accessibility, and SEO auditing for web applications', 'lighthouse:latest', ARRAY['lighthouse --output json --output html --chrome-flags="--headless --no-sandbox" $TARGET_URL'], '2025-07-06 12:00:00+00', 'b7e6c1e2-1a2b-4c3d-8e9f-000000000010'),
    ('b7e6c1e2-1a2b-4c3d-8e9f-10000000000d', 'Robot Framework Acceptance Tests', 'Business-readable acceptance tests using Robot Framework with keyword-driven approach', 'robotframework/rfdocker:latest', ARRAY['robot --outputdir reports tests/'], '2025-07-05 12:00:00+00', 'b7e6c1e2-1a2b-4c3d-8e9f-00000000000f'),
    ('b7e6c1e2-1a2b-4c3d-8e9f-10000000000e', 'Artillery Spike Load Test', 'Spike testing to validate system behavior under sudden load increases', 'artilleryio/artillery:latest', ARRAY['artillery run --config spike-test.yml load-test.js'], '2025-07-04 12:00:00+00', 'b7e6c1e2-1a2b-4c3d-8e9f-00000000000d'),
    ('b7e6c1e2-1a2b-4c3d-8e9f-10000000000f', 'Selenium Cross-Browser Tests', 'Cross-browser compatibility testing using Selenium Grid with Chrome, Firefox, and Edge', 'selenium/standalone-chrome:latest', ARRAY['python -m pytest selenium_tests/ --browser=chrome,firefox,edge'], '2025-07-03 12:00:00+00', 'b7e6c1e2-1a2b-4c3d-8e9f-00000000000a'),
    ('b7e6c1e2-1a2b-4c3d-8e9f-100000000010', 'TestCafe Visual Regression Tests', 'Visual regression testing with TestCafe for UI consistency validation', 'testcafe/testcafe:latest', ARRAY['testcafe chrome tests/visual/ --reporter spec,json'], '2025-07-02 12:00:00+00', 'b7e6c1e2-1a2b-4c3d-8e9f-00000000000b'),
    ('b7e6c1e2-1a2b-4c3d-8e9f-100000000011', 'CodeceptJS BDD Tests', 'Behavior-driven development tests using CodeceptJS with Cucumber integration', 'codeceptjs/codeceptjs:latest', ARRAY['npx codeceptjs run --features --reporter json'], '2025-07-01 12:00:00+00', 'b7e6c1e2-1a2b-4c3d-8e9f-00000000000e'),
    ('b7e6c1e2-1a2b-4c3d-8e9f-100000000012', 'Vitest Unit Tests', 'Fast unit tests for Vite projects with hot module replacement and TypeScript support', 'node:18-alpine', ARRAY['npm ci', 'npm run test:vitest -- --coverage --reporter=verbose'], '2025-06-30 12:00:00+00', 'b7e6c1e2-1a2b-4c3d-8e9f-000000000009'),
    ('b7e6c1e2-1a2b-4c3d-8e9f-100000000013', 'Newman Contract Tests', 'API contract testing with Postman collections to ensure API compatibility', 'postman/newman:alpine', ARRAY['newman run contract-tests.json --environment production.json --reporters cli,json'], '2025-06-29 12:00:00+00', 'b7e6c1e2-1a2b-4c3d-8e9f-00000000000c')
ON CONFLICT (id) DO NOTHING;

-- Insert additional production test suites (with UUIDs)
INSERT INTO test_suites (id, name, description, execution_mode, labels, test_definition_ids, created_at)
VALUES 
    ('b7e6c1e2-1a2b-4c3d-8e9f-300000000001', 'Quality Assurance Suite', 'Comprehensive QA testing including performance, accessibility, and visual regression tests', 'sequential', ARRAY['qa', 'performance', 'accessibility', 'visual'], ARRAY['b7e6c1e2-1a2b-4c3d-8e9f-10000000000c', 'b7e6c1e2-1a2b-4c3d-8e9f-100000000010', 'b7e6c1e2-1a2b-4c3d-8e9f-10000000000f']::UUID[], '2025-07-10 12:00:00+00'),
    ('b7e6c1e2-1a2b-4c3d-8e9f-300000000002', 'Contract Testing Suite', 'API contract and integration testing to ensure service compatibility', 'parallel', ARRAY['contract', 'api', 'integration', 'compatibility'], ARRAY['b7e6c1e2-1a2b-4c3d-8e9f-100000000013', 'b7e6c1e2-1a2b-4c3d-8e9f-100000000007', 'b7e6c1e2-1a2b-4c3d-8e9f-100000000002']::UUID[], '2025-07-09 12:00:00+00'),
    ('b7e6c1e2-1a2b-4c3d-8e9f-300000000003', 'Load Testing Suite', 'Comprehensive load testing including stress, spike, and endurance tests', 'sequential', ARRAY['load', 'stress', 'spike', 'endurance'], ARRAY['b7e6c1e2-1a2b-4c3d-8e9f-100000000006', 'b7e6c1e2-1a2b-4c3d-8e9f-10000000000e']::UUID[], '2025-07-08 12:00:00+00'),
    ('b7e6c1e2-1a2b-4c3d-8e9f-300000000004', 'Acceptance Testing Suite', 'Business acceptance testing with behavior-driven development approach', 'sequential', ARRAY['acceptance', 'bdd', 'business', 'requirements'], ARRAY['b7e6c1e2-1a2b-4c3d-8e9f-10000000000d', 'b7e6c1e2-1a2b-4c3d-8e9f-100000000011']::UUID[], '2025-07-07 12:00:00+00'),
    ('b7e6c1e2-1a2b-4c3d-8e9f-300000000005', 'Cross-Browser Testing Suite', 'Multi-browser compatibility testing across different environments', 'parallel', ARRAY['cross-browser', 'compatibility', 'multi-platform'], ARRAY['b7e6c1e2-1a2b-4c3d-8e9f-10000000000f', 'b7e6c1e2-1a2b-4c3d-8e9f-100000000010', 'b7e6c1e2-1a2b-4c3d-8e9f-100000000004']::UUID[], '2025-07-06 12:00:00+00')
ON CONFLICT (id) DO NOTHING;

-- Insert sample production test runs with realistic data (with UUIDs and valid status)
INSERT INTO test_runs (id, name, image, command, status, created_at, duration, logs, test_definition_id, executor_id)
VALUES 
    ('b7e6c1e2-1a2b-4c3d-8e9f-400000000001', 'Lighthouse Performance Audit - Production Site', 'lighthouse:latest', ARRAY['lighthouse --output json --output html --chrome-flags="--headless --no-sandbox" https://example.com'], 'succeeded', '2025-07-18 06:00:00+00', 45000, ARRAY['> Starting Lighthouse performance audit...', '> lighthouse --output json --output html --chrome-flags="--headless --no-sandbox" https://example.com', '', 'Lighthouse 10.4.0', 'Auditing https://example.com...', '', 'Performance Score: 92/100', 'Accessibility Score: 95/100', 'Best Practices Score: 100/100', 'SEO Score: 88/100', 'Progressive Web App Score: 80/100', '', 'Opportunities:', '• Serve images in next-gen formats (WebP) - Potential savings: 45 KB', '• Eliminate render-blocking resources - Potential savings: 120 ms', '• Properly size images - Potential savings: 78 KB', '', 'Diagnostics:', '• First Contentful Paint: 1.2 s', '• Speed Index: 1.8 s', '• Largest Contentful Paint: 2.1 s', '• Time to Interactive: 2.3 s', '• Total Blocking Time: 45 ms', '• Cumulative Layout Shift: 0.02', '', '✅ Audit completed successfully', '📊 Reports generated: lighthouse-report.html, lighthouse-report.json'], 'b7e6c1e2-1a2b-4c3d-8e9f-10000000000c', 'b7e6c1e2-1a2b-4c3d-8e9f-000000000010'),
    ('b7e6c1e2-1a2b-4c3d-8e9f-400000000002', 'Robot Framework Acceptance Tests - User Stories', 'robotframework/rfdocker:latest', ARRAY['robot --outputdir reports tests/'], 'succeeded', '2025-07-18 05:00:00+00', 180000, ARRAY['> Starting Robot Framework acceptance tests...', '> robot --outputdir reports tests/', '', 'Robot Framework 6.1.1 (Python 3.11.5 on linux)', '', 'Running tests from: tests/', '', 'User Management Features', '✓ User can register with valid email and password', '✓ User receives confirmation email after registration', '✓ User can login with correct credentials', '✓ User cannot login with invalid credentials', '✓ User can reset password using email', '', 'Product Management Features', '✓ Admin can add new products', '✓ Admin can update existing products', '✓ Admin can delete products', '✓ Products display correctly on storefront', '✓ Product search returns accurate results', '', 'Order Management Features', '✓ User can add products to cart', '✓ User can update cart quantities', '✓ User can remove items from cart', '✓ User can proceed to checkout', '✓ User can complete payment process', '✓ User receives order confirmation', '', 'Test Results:', '===========', 'Total tests: 16', 'Passed: 16', 'Failed: 0', 'Skipped: 0', '', '✅ All acceptance tests passed!', '📊 Reports generated in reports/ directory'], 'b7e6c1e2-1a2b-4c3d-8e9f-10000000000d', 'b7e6c1e2-1a2b-4c3d-8e9f-00000000000f'),
    ('b7e6c1e2-1a2b-4c3d-8e9f-400000000003', 'Artillery Spike Load Test - API Endpoints', 'artilleryio/artillery:latest', ARRAY['artillery run --config spike-test.yml load-test.js'], 'failed', '2025-07-18 04:00:00+00', 420000, ARRAY['> Starting Artillery spike load test...', '> artillery run --config spike-test.yml load-test.js', '', 'Artillery 2.0.0', 'Target: https://api.example.com', '', 'Phase 1: Ramp-up (0 -> 10 users over 30s)', 'Phase 2: Steady (10 users for 60s)', 'Phase 3: Spike (10 -> 100 users over 10s)', 'Phase 4: Sustain (100 users for 120s)', 'Phase 5: Ramp-down (100 -> 0 users over 30s)', '', 'Starting test at 2025-07-18T04:00:00Z', '', 'Phase 1 (Ramp-up): ✓ Response times: avg 145ms, p99 280ms', 'Phase 2 (Steady): ✓ Response times: avg 167ms, p99 320ms', 'Phase 3 (Spike): ⚠ Response times: avg 1.2s, p99 4.8s', 'Phase 4 (Sustain): ❌ Response times: avg 2.1s, p99 8.2s', 'Phase 5 (Ramp-down): ✓ Response times: avg 234ms, p99 450ms', '', 'Summary:', '--------', 'Total requests: 45,678', 'Successful requests: 42,156 (92.3%)', 'Failed requests: 3,522 (7.7%)', 'Error rate: 7.7%', 'Average response time: 1.2s', 'p95 response time: 3.4s', 'p99 response time: 6.8s', '', '❌ Spike test failed - high error rate during peak load', '⚠️ System performance degraded significantly under spike load', '💡 Recommendation: Implement auto-scaling or optimize database queries'], 'b7e6c1e2-1a2b-4c3d-8e9f-10000000000e', 'b7e6c1e2-1a2b-4c3d-8e9f-00000000000d'),
    ('b7e6c1e2-1a2b-4c3d-8e9f-400000000004', 'Selenium Cross-Browser Tests - E2E Scenarios', 'selenium/standalone-chrome:latest', ARRAY['python -m pytest selenium_tests/ --browser=chrome,firefox,edge'], 'running', '2025-07-18 12:10:00+00', NULL, ARRAY['> Starting Selenium cross-browser tests...', '> python -m pytest selenium_tests/ --browser=chrome,firefox,edge', '', 'Selenium WebDriver 4.12.0', 'Python 3.11.5', '', 'Collecting tests...', 'Found 24 test scenarios across 3 browsers', '', 'Chrome Browser Tests:', '✓ test_login_flow - Login with valid credentials', '✓ test_navigation - Navigate between pages', '✓ test_form_submission - Submit contact form', '✓ test_responsive_design - Responsive layout checks', '✓ test_ajax_interactions - AJAX form handling', '✓ test_file_upload - File upload functionality', '✓ test_drag_and_drop - Drag and drop interface', '✓ test_keyboard_shortcuts - Keyboard navigation', '', 'Firefox Browser Tests:', '✓ test_login_flow - Login with valid credentials', '✓ test_navigation - Navigate between pages', '✓ test_form_submission - Submit contact form', '✓ test_responsive_design - Responsive layout checks', '✓ test_ajax_interactions - AJAX form handling', '✓ test_file_upload - File upload functionality', '✓ test_drag_and_drop - Drag and drop interface', '✓ test_keyboard_shortcuts - Keyboard navigation', '', 'Edge Browser Tests:', '⏳ test_login_flow - Currently running...', '⏳ test_navigation - Pending...', '⏳ test_form_submission - Pending...', '', 'Progress: 16/24 tests completed'], 'b7e6c1e2-1a2b-4c3d-8e9f-10000000000f', 'b7e6c1e2-1a2b-4c3d-8e9f-00000000000a')
ON CONFLICT (id) DO NOTHING;

-- Update statistics for better query planning
ANALYZE test_executors;
ANALYZE test_definitions;
ANALYZE test_runs;
ANALYZE test_suites;
