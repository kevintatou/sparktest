# Production Dockerfile for SparkTest Rust Backend
FROM rustlang/rust:nightly-slim AS builder

# Install system dependencies
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy the entire workspace - this is simpler and ensures we get everything
COPY Cargo.toml Cargo.lock ./
COPY backend/ ./backend/

# Build the application
RUN cargo build --release --bin sparktest-bin

# Runtime stage
FROM debian:bookworm-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    libssl3 \
    sqlite3 \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create app user
RUN groupadd -r sparktest && useradd -r -g sparktest sparktest

WORKDIR /app

# Create data directory
RUN mkdir -p /app/data && chown sparktest:sparktest /app/data

# Copy the binary from builder stage
COPY --from=builder /app/target/release/sparktest-bin /app/sparktest-backend
COPY --from=builder /app/backend/bin/migrations /app/migrations

# Set permissions
RUN chown -R sparktest:sparktest /app

USER sparktest

# Expose port
EXPOSE 8080

# Environment variables
ENV RUST_LOG=info
ENV DATABASE_URL=sqlite:./data/sparktest.db
ENV PORT=8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8080/api/health || exit 1

CMD ["./sparktest-backend"]
