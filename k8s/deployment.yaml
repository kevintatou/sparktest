# Simple deployment file for SparkTest on Kubernetes
# Addresses GLIBC compatibility and SQLite database issues from GitHub Issue #159

apiVersion: v1
kind: Namespace
metadata:
  name: sparktest
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sparktest-config
  namespace: sparktest
data:
  RUST_LOG: "info"
  PORT: "8080"
  DATABASE_URL: "sqlite:/app/data/sparktest.db"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sparktest-db-pvc
  namespace: sparktest
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sparktest-backend
  namespace: sparktest
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sparktest-backend
  template:
    metadata:
      labels:
        app: sparktest-backend
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
        - name: backend
          image: sparktest-backend:local
          imagePullPolicy: Never
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: sparktest-config
          volumeMounts:
            - name: data-volume
              mountPath: /app/data
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /api/health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
      volumes:
        - name: data-volume
          persistentVolumeClaim:
            claimName: sparktest-db-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: sparktest-backend-service
  namespace: sparktest
spec:
  selector:
    app: sparktest-backend
  ports:
    - port: 8080
      targetPort: 8080
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sparktest-frontend
  namespace: sparktest
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sparktest-frontend
  template:
    metadata:
      labels:
        app: sparktest-frontend
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
      containers:
        - name: frontend
          image: sparktest-frontend:local
          imagePullPolicy: Never
          ports:
            - containerPort: 3000
          env:
            - name: NEXT_PUBLIC_API_URL
              value: "http://sparktest-backend-service:8080"
            - name: NODE_ENV
              value: "production"
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: sparktest-frontend-service
  namespace: sparktest
spec:
  selector:
    app: sparktest-frontend
  ports:
    - port: 3000
      targetPort: 3000
  type: ClusterIP
