# Multi-stage build for Rust backend
FROM rust:1.75 AS builder

WORKDIR /app

# Create app user for build
RUN useradd --create-home --shell /bin/bash app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    && rm -rf /var/lib/apt/lists/*

# Copy Cargo files for dependency caching
COPY Cargo.toml Cargo.lock ./
COPY backend/ ./backend/

# Build dependencies (cached layer)
RUN cargo build --release --bin sparktest-api

# Runtime stage
FROM debian:bookworm-slim AS runtime

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    wget \
    sqlite3 \
    && rm -rf /var/lib/apt/lists/*

# Create app user
RUN useradd --create-home --shell /bin/bash app

WORKDIR /app

# Copy binary from builder
COPY --from=builder /app/target/release/sparktest-api /usr/local/bin/sparktest-api

# Create data directory
RUN mkdir -p /app/data && chown -R app:app /app

# Copy any migration files if they exist
COPY --chown=app:app backend/migrations/ ./migrations/ 2>/dev/null || true

USER app

# Expose port
EXPOSE 8080

# Environment variables
ENV RUST_LOG=info
ENV RUST_ENV=production

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1

CMD ["sparktest-api"]
