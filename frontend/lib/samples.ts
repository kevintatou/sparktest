import { Definition, Executor, Run, TestSuite } from "./types"

// Sample Test Suites
export const sampleTestSuites: TestSuite[] = [
  {
    id: "api-suite",
    name: "API Test Suite",
    description: "Complete API testing including auth, CRUD operations, and error handling",
    testDefinitionIds: ["api-integration-tests", "security-scan", "performance-tests"],
    createdAt: new Date(Date.now() - 86400000).toISOString(),
    executionMode: "sequential",
    labels: ["api", "backend"],
  },
  {
    id: "e2e-suite",
    name: "End-to-End Suite",
    description: "Full user journey testing across the application",
    testDefinitionIds: ["e2e-tests", "frontend-unit-tests", "cypress-e2e"],
    createdAt: new Date(Date.now() - 172800000).toISOString(),
    executionMode: "sequential",
    labels: ["e2e", "frontend"],
  },
  {
    id: "performance-suite",
    name: "Performance Test Suite",
    description: "Load testing and performance benchmarks",
    testDefinitionIds: ["performance-tests", "lighthouse-audit", "database-migration-tests"],
    createdAt: new Date(Date.now() - 259200000).toISOString(),
    executionMode: "parallel",
    labels: ["performance", "load"],
  },
  {
    id: "ci-cd-suite",
    name: "CI/CD Pipeline Suite",
    description: "Comprehensive testing pipeline for continuous integration",
    testDefinitionIds: ["unit-tests-jest", "integration-tests-newman", "security-scan", "docker-build-test"],
    createdAt: new Date(Date.now() - 345600000).toISOString(),
    executionMode: "sequential",
    labels: ["ci-cd", "pipeline"],
  },
  {
    id: "mobile-suite",
    name: "Mobile App Test Suite",
    description: "Cross-platform mobile testing with Appium and device farms",
    testDefinitionIds: ["appium-ios-tests", "appium-android-tests", "mobile-performance"],
    createdAt: new Date(Date.now() - 432000000).toISOString(),
    executionMode: "parallel",
    labels: ["mobile", "cross-platform"],
  },
  {
    id: "static-backend-suite",
    name: "Static Backend Test Suite",
    description: "Simple static tests perfect for backend Rust mode - lightweight and dependency-free",
    testDefinitionIds: ["static-bash-tests", "static-curl-tests", "static-file-tests", "static-json-tests"],
    createdAt: new Date(Date.now() - 86400000).toISOString(),
    executionMode: "sequential",
    labels: ["static", "backend", "simple"],
  },
]

// Sample Definitions
export const sampleDefinitions: Definition[] = [
  {
    id: "api-integration-tests",
    name: "REST API Integration Tests",
    description: "Comprehensive API testing with Newman running Postman collections for authentication, CRUD operations, and error handling",
    image: "postman/newman:latest",
    commands: ["newman", "run", "api-collection.json", "--env-var", "baseUrl=$API_URL", "--reporters", "cli,json", "--reporter-json-export", "results.json"],
    createdAt: new Date(Date.now() - 86400000).toISOString(), // 1 day ago
    executorId: "kubernetes",
    variables: {
      API_URL: "https://jsonplaceholder.typicode.com",
      TEST_ENV: "staging",
      TIMEOUT: "30000",
    },
    labels: ["api", "integration", "postman", "newman"],
  },
  {
    id: "frontend-unit-tests",
    name: "React Component Unit Tests",
    description: "Comprehensive React component testing with Jest and React Testing Library, including hooks and utilities",
    image: "node:18-alpine",
    commands: ["npm ci", "npm run test:unit", "npm run test:coverage"],
    createdAt: new Date(Date.now() - 172800000).toISOString(), // 2 days ago
    executorId: "docker",
    variables: {
      NODE_ENV: "test",
      CI: "true",
      COVERAGE_THRESHOLD: "80",
    },
    labels: ["frontend", "unit", "react", "jest"],
  },
  {
    id: "e2e-tests",
    name: "Playwright E2E Tests",
    description: "Cross-browser end-to-end testing with Playwright covering user journeys and critical paths",
    image: "mcr.microsoft.com/playwright:v1.40.0-focal",
    commands: ["npm ci", "npx playwright install", "npx playwright test --project=chromium,firefox,webkit"],
    createdAt: new Date(Date.now() - 259200000).toISOString(), // 3 days ago
    executorId: "kubernetes",
    variables: {
      BASE_URL: "https://demo.playwright.dev",
      HEADLESS: "true",
      PARALLEL_WORKERS: "2",
    },
    labels: ["e2e", "playwright", "cross-browser"],
  },
  {
    id: "cypress-e2e",
    name: "Cypress E2E Tests",
    description: "Modern E2E testing with Cypress for interactive web applications",
    image: "cypress/included:13.6.1",
    commands: ["cypress", "run", "--browser", "chrome", "--headless", "--record", "--key", "$CYPRESS_KEY"],
    createdAt: new Date(Date.now() - 172800000).toISOString(), // 2 days ago
    executorId: "kubernetes",
    variables: {
      CYPRESS_baseUrl: "https://example.cypress.io",
      CYPRESS_KEY: "test-key",
      CYPRESS_VIDEO: "true",
    },
    labels: ["e2e", "cypress", "interactive"],
  },
  {
    id: "security-scan",
    name: "OWASP ZAP Security Scan",
    description: "Automated security testing with OWASP ZAP baseline scan for vulnerability detection",
    image: "owasp/zap2docker-stable:latest",
    commands: ["zap-baseline.py", "-t", "$TARGET_URL", "-r", "security-report.html", "-J", "security-report.json"],
    createdAt: new Date(Date.now() - 345600000).toISOString(), // 4 days ago
    executorId: "docker",
    variables: {
      TARGET_URL: "https://demo.testfire.net",
      ZAP_TIMEOUT: "300",
    },
    labels: ["security", "owasp", "zap", "vulnerability"],
  },
  {
    id: "performance-tests",
    name: "K6 Load Testing",
    description: "Performance and load testing using K6 to validate application scalability and response times",
    image: "grafana/k6:latest",
    commands: ["k6", "run", "--vus", "$VUS", "--duration", "$DURATION", "/scripts/load-test.js"],
    createdAt: new Date(Date.now() - 432000000).toISOString(), // 5 days ago
    executorId: "kubernetes",
    variables: {
      BASE_URL: "https://test.k6.io",
      VUS: "50",
      DURATION: "5m",
      THRESHOLD_P95: "500",
    },
    labels: ["performance", "load", "k6", "scalability"],
  },
  {
    id: "lighthouse-audit",
    name: "Lighthouse Performance Audit",
    description: "Web performance auditing with Google Lighthouse for Core Web Vitals and best practices",
    image: "femtopixel/google-lighthouse:latest",
    commands: ["lighthouse", "$TARGET_URL", "--output=json", "--output=html", "--output-path=/tmp/lighthouse-results", "--chrome-flags='--headless --no-sandbox'"],
    createdAt: new Date(Date.now() - 518400000).toISOString(), // 6 days ago
    executorId: "docker",
    variables: {
      TARGET_URL: "https://web.dev",
      LIGHTHOUSE_FLAGS: "--quiet --chrome-flags='--headless --no-sandbox'",
    },
    labels: ["performance", "lighthouse", "web-vitals", "audit"],
  },
  {
    id: "database-migration-tests",
    name: "Database Migration Tests",
    description: "PostgreSQL schema migration testing with rollback validation and data integrity checks",
    image: "postgres:15-alpine",
    commands: ["./scripts/test-migrations.sh", "psql -c 'SELECT version()'", "npm run migrate:test"],
    createdAt: new Date(Date.now() - 604800000).toISOString(), // 7 days ago
    executorId: "docker",
    variables: {
      DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/testdb",
      MIGRATION_PATH: "./migrations",
      PGPASSWORD: "postgres",
    },
    labels: ["database", "migration", "postgres", "data-integrity"],
  },
  {
    id: "integration-tests-newman",
    name: "Newman API Collection Tests",
    description: "Automated API testing with Newman running comprehensive Postman collections",
    image: "postman/newman:latest",
    commands: ["newman", "run", "collection.json", "--environment", "staging.json", "--reporters", "cli,htmlextra", "--reporter-htmlextra-export", "report.html"],
    createdAt: new Date(Date.now() - 432000000).toISOString(), // 5 days ago
    executorId: "kubernetes",
    variables: {
      COLLECTION_URL: "https://api.postman.com/collections/12345",
      ENVIRONMENT: "staging",
      API_KEY: "test-api-key",
    },
    labels: ["api", "integration", "newman", "postman"],
  },
  {
    id: "unit-tests-jest",
    name: "Jest Unit Tests",
    description: "Comprehensive unit testing suite with Jest, including mocking and code coverage",
    image: "node:18-alpine",
    commands: ["npm ci", "npm run test:unit", "npm run test:coverage", "npm run test:watch"],
    createdAt: new Date(Date.now() - 259200000).toISOString(), // 3 days ago
    executorId: "docker",
    variables: {
      NODE_ENV: "test",
      JEST_COVERAGE: "true",
      JEST_VERBOSE: "true",
    },
    labels: ["unit", "jest", "coverage", "mocking"],
  },
  {
    id: "docker-build-test",
    name: "Docker Build & Test",
    description: "Docker container build validation and security scanning with Trivy",
    image: "aquasec/trivy:latest",
    commands: ["trivy", "image", "--format", "json", "--output", "security-report.json", "$IMAGE_NAME"],
    createdAt: new Date(Date.now() - 345600000).toISOString(), // 4 days ago
    executorId: "kubernetes",
    variables: {
      IMAGE_NAME: "node:18-alpine",
      TRIVY_SEVERITY: "HIGH,CRITICAL",
    },
    labels: ["docker", "security", "trivy", "container"],
  },
  {
    id: "appium-ios-tests",
    name: "Appium iOS Tests",
    description: "Mobile automation testing for iOS apps using Appium WebDriver",
    image: "appium/appium:latest",
    commands: ["appium", "--log-level", "info", "--session-override", "--relaxed-security"],
    createdAt: new Date(Date.now() - 518400000).toISOString(), // 6 days ago
    executorId: "kubernetes",
    variables: {
      PLATFORM_NAME: "iOS",
      PLATFORM_VERSION: "16.0",
      DEVICE_NAME: "iPhone 14",
      APP_PATH: "/apps/test-app.app",
    },
    labels: ["mobile", "ios", "appium", "automation"],
  },
  {
    id: "appium-android-tests",
    name: "Appium Android Tests",
    description: "Mobile automation testing for Android apps using Appium WebDriver",
    image: "appium/appium:latest",
    commands: ["appium", "--log-level", "info", "--session-override", "--relaxed-security"],
    createdAt: new Date(Date.now() - 432000000).toISOString(), // 5 days ago
    executorId: "kubernetes",
    variables: {
      PLATFORM_NAME: "Android",
      PLATFORM_VERSION: "13.0",
      DEVICE_NAME: "Pixel 7",
      APP_PATH: "/apps/test-app.apk",
    },
    labels: ["mobile", "android", "appium", "automation"],
  },
  {
    id: "mobile-performance",
    name: "Mobile Performance Tests",
    description: "Mobile app performance testing with network simulation and battery usage monitoring",
    image: "browserstack/browserstack-local:latest",
    commands: ["./BrowserStackLocal", "--key", "$BROWSERSTACK_KEY", "--enable-logging-for-api"],
    createdAt: new Date(Date.now() - 604800000).toISOString(), // 7 days ago
    executorId: "docker",
    variables: {
      BROWSERSTACK_KEY: "test-key",
      NETWORK_PROFILE: "3G",
      DEVICE_TYPE: "mobile",
    },
    labels: ["mobile", "performance", "browserstack", "network"],
  },
  {
    id: "accessibility-tests",
    name: "Accessibility Tests",
    description: "Automated accessibility testing with axe-core and WAVE API for WCAG compliance",
    image: "node:18-alpine",
    commands: ["npm ci", "npm run test:a11y", "axe --chrome-flags='--headless --no-sandbox' $TARGET_URL"],
    createdAt: new Date(Date.now() - 172800000).toISOString(), // 2 days ago
    executorId: "kubernetes",
    variables: {
      TARGET_URL: "https://dequeuniversity.com/demo/mars/",
      A11Y_STANDARD: "WCAG2AA",
      OUTPUT_FORMAT: "json",
    },
    labels: ["accessibility", "a11y", "wcag", "axe-core"],
  },
  {
    id: "static-bash-tests",
    name: "Static Bash Tests",
    description: "Simple bash commands and file operations - perfect for backend Rust execution mode",
    image: "alpine:latest",
    commands: ["echo 'Test started'", "ls -la", "echo 'Environment check'", "env | grep -E '^(PATH|HOME|USER)'", "echo 'Test completed successfully'"],
    createdAt: new Date(Date.now() - 86400000).toISOString(), // 1 day ago
    executorId: "kubernetes",
    variables: {
      TEST_TYPE: "static",
      LOG_LEVEL: "info",
    },
    labels: ["static", "bash", "simple", "backend-ready"],
  },
  {
    id: "static-curl-tests",
    name: "Static HTTP Tests",
    description: "Basic HTTP endpoint testing using curl - minimal dependencies for backend execution",
    image: "alpine/curl:latest",
    commands: ["curl -I https://httpbin.org/status/200", "curl -s https://httpbin.org/json", "curl -X POST -d '{\"test\":\"data\"}' https://httpbin.org/post"],
    createdAt: new Date(Date.now() - 172800000).toISOString(), // 2 days ago
    executorId: "docker",
    variables: {
      API_ENDPOINT: "https://httpbin.org",
      TIMEOUT: "10",
      RETRIES: "3",
    },
    labels: ["static", "http", "curl", "api-basic"],
  },
  {
    id: "static-file-tests",
    name: "Static File Operations",
    description: "File system operations and data validation - great for backend processing tests",
    image: "alpine:latest",
    commands: ["touch /tmp/test.txt", "echo 'Hello World' > /tmp/test.txt", "cat /tmp/test.txt", "wc -l /tmp/test.txt", "rm /tmp/test.txt"],
    createdAt: new Date(Date.now() - 259200000).toISOString(), // 3 days ago
    executorId: "docker",
    variables: {
      TEMP_DIR: "/tmp",
      FILE_NAME: "test.txt",
    },
    labels: ["static", "filesystem", "basic", "backend-ready"],
  },
  {
    id: "static-json-tests",
    name: "Static JSON Processing",
    description: "JSON data processing and validation using jq - lightweight for backend mode",
    image: "alpine/jq:latest",
    commands: ["echo '{\"name\":\"test\",\"value\":123}' | jq .", "echo '[1,2,3,4,5]' | jq 'length'", "echo '{\"items\":[{\"id\":1},{\"id\":2}]}' | jq '.items | length'"],
    createdAt: new Date(Date.now() - 345600000).toISOString(), // 4 days ago
    executorId: "kubernetes",
    variables: {
      JSON_FORMAT: "compact",
      VALIDATE_SCHEMA: "false",
    },
    labels: ["static", "json", "jq", "data-processing"],
  },
  {
    id: "static-network-tests",
    name: "Static Network Tests",
    description: "Basic network connectivity and DNS resolution - simple backend networking tests",
    image: "alpine:latest",
    commands: ["ping -c 3 8.8.8.8", "nslookup google.com", "wget -O /dev/null -q https://example.com", "echo 'Network tests completed'"],
    createdAt: new Date(Date.now() - 432000000).toISOString(), // 5 days ago
    executorId: "docker",
    variables: {
      PING_COUNT: "3",
      DNS_SERVER: "8.8.8.8",
      TIMEOUT: "5",
    },
    labels: ["static", "network", "connectivity", "dns"],
  },
]

// Sample Runs
export const sampleRuns: Run[] = [
  {
    id: "run-1",
    name: "REST API Integration Tests - Production Deploy",
    image: "postman/newman:latest",
    command: ["newman", "run", "api-collection.json", "--env-var", "baseUrl=https://jsonplaceholder.typicode.com"],
    status: "completed",
    createdAt: new Date(Date.now() - 3600000).toISOString(), // 1 hour ago
    definitionId: "api-integration-tests",
    executorId: "kubernetes",
    variables: {
      API_URL: "https://jsonplaceholder.typicode.com",
      TEST_ENV: "production",
    },
    artifacts: ["test-results.json", "newman-report.html"],
    duration: 185000, // 3 minutes 5 seconds
    logs: [
      "newman",
      "",
      "API Integration Tests",
      "",
      "→ User Management",
      "  POST https://jsonplaceholder.typicode.com/users [201 Created, 532B, 145ms]",
      "  ✓ Status code is 201",
      "  ✓ Response contains user ID",
      "  ✓ Response time is acceptable",
      "",
      "→ Post Management",
      "  GET https://jsonplaceholder.typicode.com/posts [200 OK, 25.5kB, 98ms]",
      "  ✓ Status code is 200",
      "  ✓ Response contains posts array",
      "  ✓ Each post has required fields",
      "",
      "→ Authentication",
      "  POST https://jsonplaceholder.typicode.com/auth/login [200 OK, 187B, 76ms]",
      "  ✓ Status code is 200",
      "  ✓ Response contains JWT token",
      "  ✓ Token is valid format",
      "",
      "┌─────────────────────────┬──────────────────┬──────────────────┐",
      "│                         │         executed │           failed │",
      "├─────────────────────────┼──────────────────┼──────────────────┤",
      "│              iterations │                1 │                0 │",
      "├─────────────────────────┼──────────────────┼──────────────────┤",
      "│                requests │               15 │                0 │",
      "├─────────────────────────┼──────────────────┼──────────────────┤",
      "│            test-scripts │               15 │                0 │",
      "├─────────────────────────┼──────────────────┼──────────────────┤",
      "│      prerequest-scripts │               15 │                0 │",
      "├─────────────────────────┼──────────────────┼──────────────────┤",
      "│              assertions │               45 │                0 │",
      "└─────────────────────────┴──────────────────┴──────────────────┘",
      "total run duration: 3m 5s",
      "total data received: 26.2kB (approx)",
      "average response time: 112ms [min: 45ms, max: 234ms, s.d.: 54ms]",
    ],
  },
  {
    id: "run-2",
    name: "Playwright E2E Tests - Cross-Browser",
    image: "mcr.microsoft.com/playwright:v1.40.0-focal",
    command: ["npx", "playwright", "test", "--project=chromium,firefox,webkit"],
    status: "running",
    createdAt: new Date(Date.now() - 1800000).toISOString(), // 30 minutes ago
    definitionId: "e2e-tests",
    executorId: "kubernetes",
    variables: {
      BASE_URL: "https://demo.playwright.dev",
      HEADLESS: "true",
      PARALLEL_WORKERS: "2",
    },
    artifacts: ["playwright-report.html", "test-results.json"],
    logs: [
      "Running 24 tests using 2 workers",
      "",
      "  ✓ [chromium] › example.spec.ts:3:1 › should display page title (1.2s)",
      "  ✓ [chromium] › example.spec.ts:8:1 › should navigate to get started (2.1s)",
      "  ✓ [chromium] › example.spec.ts:15:1 › should perform search (3.4s)",
      "  ✓ [firefox] › example.spec.ts:3:1 › should display page title (1.5s)",
      "  ✓ [firefox] › example.spec.ts:8:1 › should navigate to get started (2.3s)",
      "  ◯ [webkit] › example.spec.ts:3:1 › should display page title (running...)",
      "  ◯ [webkit] › example.spec.ts:8:1 › should navigate to get started (queued)",
      "",
      "  5 passed (5.2s)",
      "  Current: Testing webkit browser...",
      "",
      "Test progress: 21% complete",
    ],
  },
  {
    id: "run-3",
    name: "OWASP ZAP Security Scan - Weekly Check",
    image: "owasp/zap2docker-stable:latest",
    command: ["zap-baseline.py", "-t", "https://demo.testfire.net"],
    status: "failed",
    createdAt: new Date(Date.now() - 7200000).toISOString(), // 2 hours ago
    definitionId: "security-scan",
    executorId: "docker",
    variables: {
      TARGET_URL: "https://demo.testfire.net",
      ZAP_TIMEOUT: "300",
    },
    artifacts: ["security-report.html", "security-report.json", "zap-session.data"],
    duration: 420000, // 7 minutes
    logs: [
      "2024-01-15 10:30:15,123 [ZAP-daemon] INFO ZAP is now listening on 0.0.0.0:8080",
      "2024-01-15 10:30:15,456 [ZAP-daemon] INFO ZAP baseline scan started",
      "2024-01-15 10:30:15,789 [ZAP-daemon] INFO Target URL: https://demo.testfire.net",
      "",
      "PASS: Directory Browsing [10033]",
      "PASS: Viewstate [10032]",
      "PASS: Session ID in URL Rewrite [10026]",
      "WARN: X-Frame-Options Header Not Set [10020] x 3",
      "WARN: Missing Anti-clickjacking Header [10021] x 3",
      "WARN: X-Content-Type-Options Header Missing [10021] x 8",
      "FAIL: SQL Injection [40018] x 2",
      "FAIL: Cross Site Scripting (Reflected) [40012] x 1",
      "",
      "SUMMARY",
      "=======",
      "Total alerts: 17",
      "High: 3",
      "Medium: 6", 
      "Low: 8",
      "Informational: 0",
      "",
      "❌ Security scan failed: High risk vulnerabilities detected",
      "🔍 Review the HTML report for detailed findings",
      "📋 2 SQL injection vulnerabilities found",
      "🚨 1 XSS vulnerability detected",
    ],
  },
  {
    id: "run-4",
    name: "Cypress E2E Tests - Staging Validation",
    image: "cypress/included:13.6.1",
    command: ["cypress", "run", "--browser", "chrome", "--headless"],
    status: "completed",
    createdAt: new Date(Date.now() - 10800000).toISOString(), // 3 hours ago
    definitionId: "cypress-e2e",
    executorId: "kubernetes",
    variables: {
      CYPRESS_baseUrl: "https://example.cypress.io",
      CYPRESS_VIDEO: "true",
    },
    artifacts: ["cypress-report.html", "videos/", "screenshots/"],
    duration: 480000, // 8 minutes
    logs: [
      "====================================================================================================",
      "",
      "  (Run Starting)",
      "",
      "  ┌────────────────────────────────────────────────────────────────────────────────────────────────┐",
      "  │ Cypress:        13.6.1                                                                        │",
      "  │ Browser:        Chrome 120 (headless)                                                         │",
      "  │ Node Version:   v18.17.1                                                                      │",
      "  │ Specs:          8 found (auth.cy.ts, dashboard.cy.ts, navigation.cy.ts, ...)                │",
      "  │ Searched:       cypress/e2e/**/*.cy.{js,jsx,ts,tsx}                                          │",
      "  └────────────────────────────────────────────────────────────────────────────────────────────────┘",
      "",
      "  Running:  auth.cy.ts                                                                      (1 of 8)",
      "  ✓ should login successfully (2.1s)",
      "  ✓ should handle login validation (1.8s)",
      "  ✓ should logout properly (1.2s)",
      "",
      "  Running:  dashboard.cy.ts                                                                 (2 of 8)",
      "  ✓ should display dashboard widgets (3.4s)",
      "  ✓ should filter data correctly (2.7s)",
      "  ✓ should export data (1.9s)",
      "",
      "  Running:  navigation.cy.ts                                                                (3 of 8)",
      "  ✓ should navigate between pages (2.1s)",
      "  ✓ should handle deep links (1.5s)",
      "",
      "  ====================================================================================================",
      "",
      "  (Run Finished)",
      "",
      "       Spec                                              Tests  Passing  Failing  Pending  Skipped",
      "  ┌────────────────────────────────────────────────────────────────────────────────────────────────┐",
      "  │ ✓  auth.cy.ts                              00:05        3        3        0        0        0 │",
      "  │ ✓  dashboard.cy.ts                         00:08        3        3        0        0        0 │",
      "  │ ✓  navigation.cy.ts                        00:04        2        2        0        0        0 │",
      "  │ ✓  All specs passed!                       00:17        8        8        0        0        0 │",
      "  └────────────────────────────────────────────────────────────────────────────────────────────────┘",
      "",
      "                                                     ✓  All tests passed!",
    ],
  },
  {
    id: "run-5",
    name: "K6 Load Testing - Production Readiness",
    image: "grafana/k6:latest",
    command: ["k6", "run", "--vus", "100", "--duration", "10m", "/scripts/load-test.js"],
    status: "completed",
    createdAt: new Date(Date.now() - 14400000).toISOString(), // 4 hours ago
    definitionId: "performance-tests",
    executorId: "kubernetes",
    variables: {
      BASE_URL: "https://test.k6.io",
      VUS: "100",
      DURATION: "10m",
      THRESHOLD_P95: "500",
    },
    artifacts: ["performance-report.json", "metrics.csv", "summary.html"],
    duration: 600000, // 10 minutes
    logs: [
      "          /\\      |‾‾| /‾‾/   /‾‾/",
      "     /\\  /  \\     |  |/  /   /  /",
      "    /  \\/    \\    |     (   /   ‾‾\\",
      "   /          \\   |  |\\  \\ |  (‾)  |",
      "  / __________ \\  |__| \\__\\ \\_____/ .io",
      "",
      "  execution: local",
      "     script: /scripts/load-test.js",
      "     output: -",
      "",
      "  scenarios: (100.00%) 1 scenario, 100 max VUs, 10m30s max duration (incl. graceful stop):",
      "           * default: 100 looping VUs for 10m0s (gracefulStop: 30s)",
      "",
      "running (10m00.0s), 000/100 VUs, 45234 complete and 0 interrupted iterations",
      "default ✓ [======================================] 100 VUs  10m0s",
      "",
      "     data_received..................: 127 MB  212 kB/s",
      "     data_sent......................: 36 MB   60 kB/s",
      "     http_req_blocked...............: avg=1.2ms    min=0s       med=0s       max=156ms    p(90)=0s      p(95)=0s",
      "     http_req_connecting............: avg=0.8ms    min=0s       med=0s       max=89ms     p(90)=0s      p(95)=0s",
      "     http_req_duration..............: avg=127ms    min=45ms     med=98ms     max=2.1s     p(90)=234ms   p(95)=345ms",
      "       { expected_response:true }...: avg=127ms    min=45ms     med=98ms     max=2.1s     p(90)=234ms   p(95)=345ms",
      "     http_req_failed................: 0.02%   ✓ 9        ✗ 45225",
      "     http_req_receiving.............: avg=1.2ms    min=0s       med=0s       max=45ms     p(90)=2ms     p(95)=4ms",
      "     http_req_sending...............: avg=0.8ms    min=0s       med=0s       max=23ms     p(90)=1ms     p(95)=2ms",
      "     http_req_tls_handshaking.......: avg=0.6ms    min=0s       med=0s       max=67ms     p(90)=0s      p(95)=0s",
      "     http_req_waiting...............: avg=125ms    min=44ms     med=96ms     max=2.1s     p(90)=231ms   p(95)=341ms",
      "     http_reqs......................: 45234   75.39/s",
      "     iteration_duration.............: avg=1.32s    min=1.04s    med=1.28s    max=3.21s    p(90)=1.54s   p(95)=1.67s",
      "     iterations.....................: 45234   75.39/s",
      "     vus............................: 100     min=100    max=100",
      "     vus_max........................: 100     min=100    max=100",
      "",
      "✅ All performance thresholds met!",
      "📊 P95 response time: 345ms (target: <500ms)",
      "💯 Error rate: 0.02% (target: <1%)",
      "🚀 Throughput: 75.39 req/s",
    ],
  },
  {
    id: "run-6",
    name: "Lighthouse Performance Audit",
    image: "femtopixel/google-lighthouse:latest",
    command: ["lighthouse", "https://web.dev", "--output=json", "--output=html"],
    status: "completed",
    createdAt: new Date(Date.now() - 18000000).toISOString(), // 5 hours ago
    definitionId: "lighthouse-audit",
    executorId: "docker",
    variables: {
      TARGET_URL: "https://web.dev",
      LIGHTHOUSE_FLAGS: "--quiet --chrome-flags='--headless --no-sandbox'",
    },
    artifacts: ["lighthouse-report.html", "lighthouse-report.json"],
    duration: 120000, // 2 minutes
    logs: [
      "Starting Lighthouse audit...",
      "Lighthouse 11.4.0",
      "Analyzing: https://web.dev",
      "",
      "✅ Navigating to https://web.dev",
      "✅ Gathering page data...",
      "✅ Analyzing performance metrics...",
      "✅ Calculating accessibility score...",
      "✅ Checking best practices...",
      "✅ Evaluating SEO factors...",
      "",
      "🏆 Performance Score: 98/100",
      "  • First Contentful Paint: 1.2s",
      "  • Largest Contentful Paint: 1.8s",
      "  • Speed Index: 2.1s",
      "  • Cumulative Layout Shift: 0.02",
      "  • Total Blocking Time: 12ms",
      "",
      "♿ Accessibility Score: 95/100",
      "  • 2 minor issues found",
      "  • Color contrast ratio: PASS",
      "  • Alt text for images: PASS",
      "",
      "✅ Best Practices Score: 100/100",
      "  • HTTPS usage: PASS",
      "  • No deprecated APIs: PASS",
      "  • No console errors: PASS",
      "",
      "🔍 SEO Score: 92/100",
      "  • Meta description: PASS",
      "  • Title tag: PASS",
      "  • 1 improvement suggested",
      "",
      "📊 PWA Score: 85/100",
      "  • Service worker: PASS",
      "  • Manifest: PASS",
      "  • Offline functionality: PARTIAL",
      "",
      "💡 Opportunities for improvement:",
      "  • Eliminate render-blocking resources (0.3s savings)",
      "  • Minimize main-thread work (0.2s savings)",
      "",
      "✅ Audit completed successfully!",
      "📄 Reports generated: lighthouse-report.html, lighthouse-report.json",
    ],
  },
  {
    id: "run-7",
    name: "Jest Unit Tests - Feature Branch",
    image: "node:18-alpine",
    command: ["npm", "run", "test:unit"],
    status: "failed",
    createdAt: new Date(Date.now() - 21600000).toISOString(), // 6 hours ago
    definitionId: "unit-tests-jest",
    executorId: "docker",
    variables: {
      NODE_ENV: "test",
      JEST_COVERAGE: "true",
      JEST_VERBOSE: "true",
    },
    artifacts: ["coverage/", "test-results.json"],
    duration: 45000, // 45 seconds
    logs: [
      "PASS src/components/Button.test.tsx",
      "PASS src/components/Card.test.tsx",
      "PASS src/utils/helpers.test.ts",
      "PASS src/hooks/useAuth.test.ts",
      "FAIL src/services/api.test.ts",
      "  ● API Service › should handle network errors",
      "",
      "    Expected: 'Network error'",
      "    Received: 'Connection timeout'",
      "",
      "      23 |     mockAxios.get.mockRejectedValue(new Error('Network error'));",
      "      24 |     const result = await apiService.get('/test');",
      "    > 25 |     expect(result.error).toBe('Network error');",
      "         |                          ^",
      "      26 |   });",
      "",
      "      at Object.<anonymous> (src/services/api.test.ts:25:26)",
      "",
      "FAIL src/components/UserProfile.test.tsx",
      "  ● UserProfile › should display user information",
      "",
      "    TestingLibraryElementError: Unable to find an element with the text: John Doe",
      "",
      "    Ignored nodes: comments, script, style",
      "    <div>",
      "      <div>",
      "        <span>Loading...</span>",
      "      </div>",
      "    </div>",
      "",
      "Test Suites: 2 failed, 3 passed, 5 total",
      "Tests:       4 failed, 23 passed, 27 total",
      "Snapshots:   0 total",
      "Time:        45.234s",
      "Ran all test suites.",
      "",
      "---------|---------|----------|---------|---------|-------------------",
      "File     | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s",
      "---------|---------|----------|---------|---------|-------------------",
      "All files|   78.42 |    65.21 |   82.35 |   77.89 |                  ",
      "---------|---------|----------|---------|---------|-------------------",
      "",
      "❌ Test suite failed: 4 out of 27 tests failed",
      "📈 Coverage: 78.42% (target: 80%)",
      "🔍 Review failed tests and fix issues",
    ],
  },
  {
    id: "run-8",
    name: "Appium iOS Tests - iPhone 14",
    image: "appium/appium:latest",
    command: ["appium", "--log-level", "info"],
    status: "completed",
    createdAt: new Date(Date.now() - 25200000).toISOString(), // 7 hours ago
    definitionId: "appium-ios-tests",
    executorId: "kubernetes",
    variables: {
      PLATFORM_NAME: "iOS",
      PLATFORM_VERSION: "16.0",
      DEVICE_NAME: "iPhone 14",
      APP_PATH: "/apps/test-app.app",
    },
    artifacts: ["appium-logs.txt", "screenshots/", "test-results.xml"],
    duration: 720000, // 12 minutes
    logs: [
      "[Appium] Welcome to Appium v2.0.0",
      "[Appium] Appium REST http interface listener started on 0.0.0.0:4723",
      "[XCUITest] Attempting to initialize the default iOS simulator",
      "[XCUITest] Simulator with UDID 'ABC123-456' booted successfully",
      "[XCUITest] Installing app '/apps/test-app.app'",
      "[XCUITest] App installed successfully",
      "",
      "🧪 Starting iOS Test Suite...",
      "",
      "✅ Test: App Launch",
      "   - App launches successfully: PASS",
      "   - Splash screen displayed: PASS",
      "   - Navigation bar loaded: PASS",
      "",
      "✅ Test: User Authentication",
      "   - Login form displayed: PASS",
      "   - Valid credentials accepted: PASS",
      "   - Invalid credentials rejected: PASS",
      "   - Biometric authentication: PASS",
      "",
      "✅ Test: Core Navigation",
      "   - Tab navigation working: PASS",
      "   - Deep linking functional: PASS",
      "   - Back button behavior: PASS",
      "",
      "✅ Test: Data Synchronization",
      "   - Online data sync: PASS",
      "   - Offline mode handling: PASS",
      "   - Conflict resolution: PASS",
      "",
      "✅ Test: Performance",
      "   - App launch time: 2.3s (target: <3s) ✓",
      "   - Screen transition time: 0.8s (target: <1s) ✓",
      "   - Memory usage: 45MB (target: <50MB) ✓",
      "",
      "📊 Test Results Summary:",
      "   Total Tests: 15",
      "   Passed: 15",
      "   Failed: 0",
      "   Execution Time: 12m 0s",
      "",
      "🎉 All iOS tests passed successfully!",
    ],
  },
  {
    id: "run-9",
    name: "Static Bash Tests - Backend Mode",
    image: "alpine:latest",
    command: ["echo", "Test started"],
    status: "completed",
    createdAt: new Date(Date.now() - 1200000).toISOString(), // 20 minutes ago
    definitionId: "static-bash-tests",
    executorId: "kubernetes",
    variables: {
      TEST_TYPE: "static",
      LOG_LEVEL: "info",
    },
    artifacts: ["test-output.txt"],
    duration: 8000, // 8 seconds
    logs: [
      "Test started",
      "total 8",
      "drwxr-xr-x    1 root     root          4096 Jan 15 14:30 .",
      "drwxr-xr-x    1 root     root          4096 Jan 15 14:30 ..",
      "-rw-r--r--    1 root     root             0 Jan 15 14:30 .dockerenv",
      "Environment check",
      "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
      "HOME=/root",
      "USER=root",
      "Test completed successfully",
    ],
  },
  {
    id: "run-10",
    name: "Static HTTP Tests - Basic API",
    image: "alpine/curl:latest",
    command: ["curl", "-I", "https://httpbin.org/status/200"],
    status: "completed",
    createdAt: new Date(Date.now() - 900000).toISOString(), // 15 minutes ago
    definitionId: "static-curl-tests",
    executorId: "docker",
    variables: {
      API_ENDPOINT: "https://httpbin.org",
      TIMEOUT: "10",
      RETRIES: "3",
    },
    artifacts: ["api-response.json"],
    duration: 3000, // 3 seconds
    logs: [
      "HTTP/1.1 200 OK",
      "Date: Mon, 15 Jan 2024 14:25:00 GMT",
      "Content-Type: application/json",
      "Content-Length: 0",
      "Connection: keep-alive",
      "Server: gunicorn/19.9.0",
      "Access-Control-Allow-Origin: *",
      "Access-Control-Allow-Credentials: true",
      "",
      "✅ HTTP endpoint responded successfully",
      "✅ Status code: 200",
      "✅ Response time: 89ms",
    ],
  },
  {
    id: "run-11",
    name: "Static File Operations - Backend Test",
    image: "alpine:latest",
    command: ["touch", "/tmp/test.txt"],
    status: "completed",
    createdAt: new Date(Date.now() - 600000).toISOString(), // 10 minutes ago
    definitionId: "static-file-tests",
    executorId: "docker",
    variables: {
      TEMP_DIR: "/tmp",
      FILE_NAME: "test.txt",
    },
    artifacts: ["file-operations.log"],
    duration: 2000, // 2 seconds
    logs: [
      "Hello World",
      "      1 /tmp/test.txt",
      "",
      "✅ File created successfully",
      "✅ Data written to file",
      "✅ File content verified",
      "✅ File cleanup completed",
    ],
  },
  {
    id: "run-12",
    name: "Static JSON Processing - Data Validation",
    image: "alpine/jq:latest",
    command: ["echo", "{\"name\":\"test\",\"value\":123}", "|", "jq", "."],
    status: "completed",
    createdAt: new Date(Date.now() - 300000).toISOString(), // 5 minutes ago
    definitionId: "static-json-tests",
    executorId: "kubernetes",
    variables: {
      JSON_FORMAT: "compact",
      VALIDATE_SCHEMA: "false",
    },
    artifacts: ["json-results.json"],
    duration: 1500, // 1.5 seconds
    logs: [
      "{",
      "  \"name\": \"test\",",
      "  \"value\": 123",
      "}",
      "5",
      "2",
      "",
      "✅ JSON parsing successful",
      "✅ Array length validation passed",
      "✅ Object structure verified",
    ],
  },
]

// Sample Executors
export const sampleExecutors: Executor[] = [
  {
    id: "kubernetes",
    name: "Kubernetes Job",
    image: "kubernetes/kubectl:latest",
    description: "Run tests as Kubernetes Jobs with full isolation, resource limits, and cluster context. Ideal for production testing environments.",
    command: ["kubectl", "create", "job"],
    supportedFileTypes: ["yaml", "yml", "json"],
    env: {
      KUBECONFIG: "/etc/kubernetes/kubeconfig",
      NAMESPACE: "sparktest",
    },
    createdAt: new Date(Date.now() - 86400000).toISOString(), // 1 day ago
  },
  {
    id: "docker",
    name: "Docker Container",
    image: "docker:latest",
    description: "Execute tests inside Docker containers with customizable resource constraints and network isolation.",
    command: ["docker", "run", "--rm"],
    supportedFileTypes: ["dockerfile", "sh", "py", "js", "ts"],
    env: {
      DOCKER_HOST: "unix:///var/run/docker.sock",
    },
    createdAt: new Date(Date.now() - 43200000).toISOString(), // 12 hours ago
  },
  {
    id: "github-actions",
    name: "GitHub Actions",
    image: "github/super-linter:latest",
    description: "Integrate with GitHub Actions for seamless CI/CD pipeline execution and Git-based workflows.",
    command: ["github-actions", "run"],
    supportedFileTypes: ["yml", "yaml", "json"],
    env: {
      GITHUB_TOKEN: "ghp_example",
      GITHUB_WORKSPACE: "/github/workspace",
    },
    createdAt: new Date(Date.now() - 172800000).toISOString(), // 2 days ago
  },
  {
    id: "aws-batch",
    name: "AWS Batch",
    image: "amazonlinux:latest",
    description: "Run large-scale batch testing jobs on AWS with automatic scaling and cost optimization.",
    command: ["aws", "batch", "submit-job"],
    supportedFileTypes: ["json", "yaml"],
    env: {
      AWS_REGION: "us-east-1",
      AWS_BATCH_JOB_QUEUE: "sparktest-queue",
    },
    createdAt: new Date(Date.now() - 259200000).toISOString(), // 3 days ago
  },
  {
    id: "azure-container",
    name: "Azure Container Instance",
    image: "mcr.microsoft.com/azure-cli:latest",
    description: "Execute tests on Azure Container Instances with serverless scaling and Azure integration.",
    command: ["az", "container", "create"],
    supportedFileTypes: ["json", "yaml"],
    env: {
      AZURE_SUBSCRIPTION_ID: "example-sub-id",
      AZURE_RESOURCE_GROUP: "sparktest-rg",
    },
    createdAt: new Date(Date.now() - 345600000).toISOString(), // 4 days ago
  },
  {
    id: "static-executor",
    name: "Static Backend Executor",
    image: "alpine:latest",
    description: "Lightweight executor for simple static tests - ideal for backend Rust mode with minimal dependencies.",
    command: ["sh", "-c"],
    supportedFileTypes: ["sh", "txt", "json"],
    env: {
      PATH: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
      SHELL: "/bin/sh",
    },
    createdAt: new Date(Date.now() - 21600000).toISOString(), // 6 hours ago
  },
]
